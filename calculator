<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Calculator</title>
  <link rel="stylesheet" href="style.css" />
</head>
<body>
  <div class="calculator">
    <div class="display" id="result">0</div>
    <div class="keys">
      <button data-action="clear">C</button>
      <button data-action="delete">‚Üê</button>
      <button data-action="operator">%</button>
      <button data-action="operator">/</button>
      
      <button>7</button>
      <button>8</button>
      <button>9</button>
      <button data-action="operator">*</button>
      
      <button>4</button>
      <button>5</button>
      <button>6</button>
      <button data-action="operator">-</button>
      
      <button>1</button>
      <button>2</button>
      <button>3</button>
      <button data-action="operator">+</button>
      
      <button>0</button>
      <button>.</button>
      <button data-action="calculate">=</button>
    </div>
  </div>
  <script src="script.js"></script>
</body>
</html>

  #javascript
  const display = document.getElementById('result');
const keys = document.querySelector('.keys');

let current = '';
let operator = null;
let firstOperand = null;
let shouldReset = false;

keys.addEventListener('click', e => {
  const btn = e.target;
  const val = btn.textContent;
  const action = btn.dataset.action;

  if (!action) handleNumber(val);
  else if (action === 'operator') handleOperator(val);
  else if (action === 'calculate') calculate();
  else if (action === 'clear') clear();
  else if (action === 'delete') del();

  updateDisplay();
});

function handleNumber(num) {
  if (shouldReset) {
    current = num;
    shouldReset = false;
  } else {
    current = current === '0' ? num : current + num;
  }
}

function handleOperator(op) {
  if (current === '') return;
  
  if (firstOperand !== null && operator !== null && !shouldReset) {
    calculate();
  } else {
    firstOperand = parseFloat(current);
  }
  
  operator = op;
  shouldReset = true;
}

function calculate() {
  if (operator == null || shouldReset) return;
  
  let second = parseFloat(current);
  let result = 0;

  switch (operator) {
    case '+': result = firstOperand + second; break;
    case '-': result = firstOperand - second; break;
    case '*': result = firstOperand * second; break;
    case '/': result = firstOperand / second; break;
    case '%': result = firstOperand % second; break;
  }
  
  current = String(result);
  operator = null;
  firstOperand = result;
  shouldReset = true;
}

function clear() {
  current = '';
  operator = null;
  firstOperand = null;
}

function del() {
  current = current.slice(0, -1);
}

function updateDisplay() {
  display.textContent = current === '' ? '0' : current;
}

#css
* {
  box-sizing: border-box;
  margin: 0; padding: 0;
  font-family: sans-serif;
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background: #f5f5f5;
}

.calculator {
  border: 2px solid #444;
  border-radius: 10px;
  overflow: hidden;
  box-shadow: 0 4px 10px rgba(0,0,0,0.1);
}

.display {
  background: #222;
  color: #fff;
  font-size: 2rem;
  padding: 20px;
  text-align: right;
}

.keys {
  display: grid;
  grid-template-columns: repeat(4, 80px);
  grid-gap: 1px;
}

button {
  padding: 20px;
  font-size: 1.2rem;
  border: none;
  cursor: pointer;
}

button[data-action="operator"],
button[data-action="calculate"] {
  background: #f0a500;
}

button[data-action="clear"],
button[data-action="delete"] {
  background: #ff6565;
}

button:not([data-action]) {
  background: #e0e0e0;
}


  
